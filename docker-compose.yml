version: '2'

services:
  # ============================= Rocketchat ==================================
  rocketchat:
    image: rocket.chat:0.69.2
    restart: unless-stopped
    environment:
      - PORT=3000
      - ROOT_URL=http://localhost:3000
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - ADMIN_USERNAME=admin
      - ADMIN_PASS=admin
    ports:
      - 3000:3000
    depends_on:
      - mongo

  mongo:
    image: mongo:3.2
    restart: unless-stopped
    volumes:
      - ./data/db:/data/db
    command: mongod --smallfiles --oplogSize 128



  # ================================= Bot =====================================
  bot:
    image: lappis/bot:tais
    build:
      context: .
      dockerfile: ./docker/bot/bot.Dockerfile
    restart: unless-stopped
    command: make run-rocketchat
    depends_on:
      - rocketchat
    # OR
    # command: make run-console
    env_file:
      - ./docker/bot/bot.env
    ports:
      - 5005:5005
    volumes:
      - ./bot:/bot
      - ./scripts:/scripts
    

  # =================================== Web ===================================
  web:
    image: lappis/web:tais
    build:
      context: .
      dockerfile: ./docker/web/web.Dockerfile
    restart: unless-stopped
    environment:
      - PORT=8000
      - ROCKETCHAT_URL=http://localhost:3000
      - ALLOWED_HOSTS=localhost
      - PREFIX_URL=
    volumes:
      - ./web:/web
    ports:
      - 8000:8000
    depends_on:
      - webdb

  webdb:
    image: postgres:10.5
    restart: unless-stopped
    volumes:
      - web_db:/var/lib/postgresql/data

  # =================================== Kibana-Web ===================================
  kibana-web:
    build:
      context: .
      dockerfile: ./docker/kibana/kibana-web.Dockerfile
    restart: unless-stopped
    environment:
      - PORT=8080
      - ALLOWED_HOSTS=localhost
      - PREFIX_URL=
    volumes:
      - ./kibana-web:/kibana-web
    ports:
      - 8080:8080
    depends_on:
      - kibana-webdb

  kibana-webdb:
    image: postgres:10.5
    restart: unless-stopped
    volumes:
      - ./kibana-web/postgres-data:/var/lib/postgresql/data


  # =============================== Analytics =================================
  elasticsearch:
    build:
      context: .
      dockerfile: ./docker/elasticsearch.Dockerfile
    restart: unless-stopped
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
    volumes:
      - esbackup:/usr/share/elasticsearch/backup
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:6.4.2
    restart: unless-stopped
    ports:
      - 5601:5601
    environment:
      - SERVER_PORT=5601
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  kibana-tais:
    build:
      context: .
      dockerfile: ./docker/kibana/kibana-tais.Dockerfile
    restart: unless-stopped
    environment:
      - PORT=8081
      - ALLOWED_HOSTS=localhost
      - PREFIX_URL=
    volumes:
      - ./kibana-tais:/kibana-tais
    ports:
      - 8081:8081
    depends_on:
      - kibana-taisdb

  kibana-taisdb:
    image: postgres:10.5
    restart: unless-stopped
    volumes:
      - ./kibana-tais/postgres-data:/var/lib/postgresql/data
    ports:
      - 5031:5032

  # =============================== Broker ====================================
  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    ports:
      - 8085:15672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  rabbitmq-consumer:
    build:
      context: .
      dockerfile: ./docker/rabbitmq/consumer.Dockerfile
    restart: unless-stopped
    volumes:
      - ./rabbitmq/consumer/:/opt/scripts/
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

      # Analytics config
      - ELASTICSEARCH_URL=elasticsearch:9200
      - ENVIRONMENT_NAME=localhost
      - BOT_VERSION=last-bot-commit-hash
      # - ELASTICSEARCH_USER=admin
      # - ELASTICSEARCH_PASSWORD=admin
      # - ELASTICSEARCH_HTTP_SCHEME=https
      # - ELASTICSEARCH_PORT=443
    command: python3 /opt/scripts/consume_bot_messages.py

  # =============================== Notebooks =================================
  notebooks:
    build:
      context: .
      dockerfile: ./docker/notebooks/notebooks.Dockerfile
    environment:
      - BOT_DIR_PATH=../../coach/
      - BOT_DOMAIN_PATH=../../coach/domain.yml
      - BOT_NLU_CONFIG_PATH=../../coach/nlu_config.yml
      - BOT_STORIES_PATH=../../coach/data/stories/
      - BOT_INTENTS_PATH=../../coach/data/intents/
      - BOT_MODELS_PATH=../../coach/models/
      - BOT_MODELS_NLU_PATH=../../coach/models/nlu/current/
      - BOT_MODELS_DIALOGUE_PATH=../../coach/models/dialogue
    volumes:
      - ./coach:/work/bot
      - ./notebooks:/work/notebooks
      - ./docs/tutoriais/:/work/tutoriais
    ports:
      - 8888:8888


volumes:
  web_db:
  esdata:
    driver: local
  esbackup:
