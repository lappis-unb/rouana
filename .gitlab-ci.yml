image: python:3.6-slim

variables:
  COACH_TEMP_IMAGE: $CI_REGISTRY_IMAGE/ci/coach:$CI_COMMIT_SHORT_SHA
  BOT_TEMP_IMAGE: $CI_REGISTRY_IMAGE/ci/bot:$CI_COMMIT_SHORT_SHA


stages:
  - test style
  - validate format
  - build requirements
  - test stories
  - build coach
  - build
  - deploy

.set_ssh_config: &set_ssh_config
  before_script:
    - apt-get update -y
    - apt-get install sshpass -y

test style:
  stage: test style
  script:
    - pip -V
    - python -V
    - pip install -r dev.requirements.txt
    - flake8 --exclude venv

run dataset validator:
  stage: validate format
  image: lappis/coach:tais
  script:
    - cd coach/
    - make run-validator

test stories:
 stage: test stories
 image: docker
 tags:
   - docker
 services:
   - docker:dind
 script:
   - docker build . -f docker/bot/coach.Dockerfile -t lappis/coach:tais > /dev/null 2>&1 # Builds lappis/coach:tais
   - docker build -f docker/bot/bot.Dockerfile -t $BOT_TEMP_IMAGE . # It uses lappis/coach:tais built locally
   - docker run --rm $BOT_TEMP_IMAGE make test-stories
   - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
   - docker tag lappis/coach:tais $COACH_TEMP_IMAGE # Retags lappis/coach:tais to temp image
   - docker push $COACH_TEMP_IMAGE # Pushes temp image to the gitlab registry (it will be pulled from gitlab and pushed to Dockerhub later)
   - docker push $BOT_TEMP_IMAGE


build requirements:
  stage: build requirements
  image: docker
  tags:
    - docker
  services:
    - docker:dind
  script:
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
    - cd ./docker/bot
    - ./build-base.sh publish
  only:
    refs:
      - master
    changes:
      - ./docker/bot/requirements.txt
  environment: homolog

build coach:
  stage: build coach
  image: docker
  tags:
    - docker
  services:
    - docker:dind
  script:
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
    - docker pull $COACH_TEMP_IMAGE
    - docker tag $COACH_TEMP_IMAGE lappis/coach:tais
    - docker push lappis/coach:tais
  only:
    - master
  environment: homolog

build bot:
  stage: build
  image: docker
  tags:
    - docker
  services:
    - docker:dind
  script:
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
    - docker pull $BOT_TEMP_IMAGE
    - docker tag $BOT_TEMP_IMAGE lappis/bot:tais
    - docker push lappis/bot:tais
  only:
    - master
  environment: homolog

build web:
  stage: build
  image: docker
  tags:
    - docker
  services:
    - docker:dind
  script:
    - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
    - docker build -f docker/web/web.Dockerfile -t lappis/bot-web:tais .
    - docker push lappis/bot-web:tais
  only:
    - master
  environment: homolog

deploy bot to homolog:
  stage: deploy
  <<: *set_ssh_config
  environment: homolog
  script:
    - ./scripts/deploy_bot.sh $TAIS_SERVER_PASSWORD $TAIS_SERVER_IP
  only:
    - master

deploy web to homolog:
  stage: deploy
  <<: *set_ssh_config
  environment: homolog
  script:
    - ./scripts/deploy_web.sh $TAIS_SERVER_PASSWORD $TAIS_SERVER_IP
  only:
    - master
